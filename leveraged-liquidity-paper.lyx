#LyX 2.4 created this file. For more info see https://www.lyx.org/
\lyxformat 620
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass revtex4-2
\use_default_options true
\maintain_unincluded_children no
\language american
\language_package default
\inputencoding utf8
\fontencoding auto
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_roman_osf false
\font_sans_osf false
\font_typewriter_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics pdftex
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement class
\float_alignment class
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Eliminating impermanent loss by leveraged liquidity"
\pdf_author "Michael Egorov"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_formatted_ref 0
\use_minted 0
\use_lineno 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tablestyle default
\tracking_changes false
\output_changes false
\change_bars false
\postpone_fragile_content true
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\docbook_table_output 0
\docbook_mathml_prefix 1
\end_header

\begin_body

\begin_layout Title
Eliminating impermanent loss by leveraged liquidity
\end_layout

\begin_layout Author
Michael Egorov
\end_layout

\begin_layout Date
2 March 2025
\end_layout

\begin_layout Abstract
Ever since the Automatic Market Makers (AMMs) were introduced in Decentralized Finance (DeFi),
 there was an issue of so-called 
\begin_inset Quotes eld
\end_inset

impermanent loss
\begin_inset Quotes erd
\end_inset

 (IL,
 or sometimes called LVR - loss vs rebalance),
 that is that AMMs often perform as a worse store of value than simply holding the components of liquidity idle.
 In this work,
 I propose a method to eliminate IL and make the position priced similarly to an individual component of liquidity while earning exchange fees.
 The simulations show,
 for example,
 that BTC/USD liquidity can make around 
\begin_inset Formula $20\%$
\end_inset

 APR (average over 6 years) fundamentally while being priced similarly to BTC.
 Of course,
 the same method is applicable to other cryptocurrencies.
\end_layout

\begin_layout Section*
General idea
\end_layout

\begin_layout Standard
In Curve Cryptoswap AMM,
 price of liquidity (excluding earned trading fees) is approximately calculated similarly to that in classic 
\begin_inset Formula $xy=k$
\end_inset

 invariant 
\begin_inset Formula $p_{LP}=\sqrt{p}$
\end_inset

,
 where 
\begin_inset Formula $p$
\end_inset

 is price of the token 
\begin_inset Formula $y$
\end_inset

 (for example,
 BTC) in terms of token 
\begin_inset Formula $x$
\end_inset

 (for example,
 USD).
 This is where impermanent loss comes from:
 for example 
\begin_inset Formula $\sqrt{p}<1/2+p/2$
\end_inset

 for all 
\begin_inset Formula $p\neq1$
\end_inset

 means that holding an asset with initial price of 
\begin_inset Formula $1$
\end_inset

 and equal amount of USD would outperform always-rebalanced liquidity if trading fee is set to zero.
\end_layout

\begin_layout Standard
Now,
 let's consider leverage 
\begin_inset Formula $L$
\end_inset

.
 If one borrows against any token with a price 
\begin_inset Formula $p^{\prime}$
\end_inset

 to buy even more of that token so that the value of the loan 
\begin_inset Formula $d$
\end_inset

is 
\shape italic
always
\shape default
 kept to be equal to 
\begin_inset Formula $d=V_{c}\left(1-1/L\right)$
\end_inset

,
 where 
\begin_inset Formula $V_{c}$
\end_inset

 is value of collateral,
 the position will be leveraged with the leverage 
\begin_inset Formula $L$
\end_inset

 at all times,
 and price of the whole position 
\begin_inset Formula $p_{*}$
\end_inset

 will be proportional to 
\begin_inset Formula $\left(p^{\prime}\right)^{L}$
\end_inset

.
\end_layout

\begin_layout Standard
Let's prove this formula.
 Small change in the price 
\begin_inset Formula $p_{*}$
\end_inset

 of a token with price 
\begin_inset Formula $p^{\prime}$
\end_inset

 leveraged with the leverage 
\begin_inset Formula $L$
\end_inset

 satisfied the relationship:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{dp_{*}}{p_{*}}=L\frac{dp^{\prime}}{p^{\prime}}.
\end{equation}

\end_inset

Integrating that gives:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\log p_{*}=L\log p^{\prime}+\textbf{const}.
\end{equation}

\end_inset

Exponentiation of both sides gives:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
p_{*}\propto\left(p^{\prime}\right)^{L}.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/sqrt.pdf
	width 9cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:scheme-of-leverage"

\end_inset

Schematic of leveraging liquidity to have no impermanent loss
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Therefore,
 if 
\begin_inset Formula $L=2$
\end_inset

 and 
\begin_inset Formula $p_{LP}=\sqrt{p}$
\end_inset

,
 leveraging liquidity would give 
\begin_inset Formula $p_{*}\propto\left(\sqrt{p}\right)^{2}=p$
\end_inset

,
 simply price of the token 
\begin_inset Formula $y$
\end_inset

,
 while the position makes exchange fees in addition (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:scheme-of-leverage"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

).
 While it sounds simple,
 it will not work with 
\begin_inset Formula $xy=k$
\end_inset

 invariant for the liquidity:
 losses on rebalancing to keep the leverage constant (or 
\shape italic
releverage losses
\shape default
) will simply be not lower than the earnings of the pool.
 Situation with Curve Cryptoswap,
 however,
 is much better,
 as will be shown in simulations.
\end_layout

\begin_layout Standard
Another curious property is that for 
\begin_inset Formula $L=2$
\end_inset

,
 size of the loan is equal to half of the size of liquidity leveraged,
 on average.
 But USD part of that liquidity is also equal to half of its size in value.
 Therefore,
 if leverage is kept constant and equal to 2,
 liquidity will on aberage have enough USD to close the position,
 which is a very convenient property.
\end_layout

\begin_layout Standard
APR of the resulting position can be expressed as:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
APR=2r_{pool}-\left(r_{borrow}+r_{loss}\right).\label{eq:releverage-loss}
\end{equation}

\end_inset

So this method only works when the rate pool (multiplied by leverage) is significantly higher than the total of borrow rate and losses introduced by releverage of the position.
 Important to point out that this expression is only approximate,
 and a more precise APR is given by a combined simulation of cryptopool and releverage.
\end_layout

\begin_layout Section*
Using CDP interest rate for rebalancing
\end_layout

\begin_layout Standard
In Curve,
 all liquidity pools have concentrated liquidity.
 However,
 when price of the asset is not constant,
 concentrated liquidity is moved towards current prices automatically (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:move-concentrated"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/shift-distribution.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:move-concentrated"

\end_inset

Movement of concentrated liquidity towards current prices
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/feed-fees.pdf
	width 9cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Subsidy for moving concentrated liquidity
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Automatic management of concentrated liquidity
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section*
Simulations and pool optimization
\end_layout

\begin_layout Standard
All simulations done in this paper are performed by simulating arbitrage between the AMM and external price feed (usually taken from Binance).
 In that,
 a model of pool AMM is being arbitraged with an infinitely deep 
\begin_inset Quotes eld
\end_inset

heatsink
\begin_inset Quotes erd
\end_inset

 which has a price changed betwen highs and lows of the candles of the feed.
 All the AMM volume is assummed to be only arbitrage between the current state of the AMM and the external prices.
 If,
 profit which arbitrage trader is making is smaller than some threshold value (typically 
\begin_inset Formula $0.03\%$
\end_inset

) - the trade is not happening.
 Also volumes stop flowing as soon as the arbitrage volume hits half of the exchange volume in the pair:
 that,
 however,
 plays only a small role in the simulations.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/7-xyk-fee-APY.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:xyk-fee"

\end_inset

Reference study:
 optimizing 
\begin_inset Formula $xy=k$
\end_inset

 pool fee.
 Data over 2 years (Jan 2023 - Oct 2024) used
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
First,
 we simulate 
\begin_inset Formula $xy=k$
\end_inset

 bonding curve (e.g.
 like Uniswap2) for sanity check of the method (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:xyk-fee"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

).
 The only adjustable parameter in this AMM is itse fee.
 There is a clear maxumum in dependendency of APR over the AMM fee,
 but it is fair to say that over the simulated range (1 Jan 2023 - 1 Nov 2024) the APR of 
\begin_inset Formula $xy=k$
\end_inset

 AMM appears around 
\begin_inset Formula $3\%$
\end_inset

.
 This APR is on top of the value 
\begin_inset Formula $xy=k$
\end_inset

 bonding curve would have had if the AMM fee was 
\begin_inset Formula $0$
\end_inset

 (e.g.
 on top of unremoved impermanent loss).
\end_layout

\begin_layout Standard
Simulation for cryptoswap is more complicated.
 I have found that replacing cryptoswap invariant with stableswap invariant while keeping the algorithm of the cryptoswap the same gives better results if subsidy with crvUSD interest rate is used while having less adjustable parameters.
 In this simulation we set borrow rate to 
\begin_inset Formula $10\%$
\end_inset

 which is 
\begin_inset Formula $-5\%$
\end_inset

 APR spent on subsidizing liquidity rebalancing and continuously taken from LPs (while they earn fees).
 If we use stalbeswap invariant,
 the parameter optimization should be seeking for maximum APR in the parameter space which includes 
\begin_inset Formula $A$
\end_inset

 (concentration parameter),
 
\begin_inset Formula $f_{mid}$
\end_inset

 (minimum AMM fee),
 
\begin_inset Formula $f_{out}$
\end_inset

 (maximum AMM fee) and 
\begin_inset Formula $\gamma_{fee}$
\end_inset

 (fee steepness parameter).
 Ideally the borrow rate also should be optimized since we are in the full control of it,
 but this was not done in these simulations (will be done in the nearest future).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/1-A-fee-APY.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Optimizing concentration parameter 
\begin_inset Formula $A$
\end_inset

 and fee 
\begin_inset Formula $f_{mid}$
\end_inset

 simultaneously
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/2-A-APY.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Optimizing concentration parameter 
\begin_inset Formula $A$
\end_inset

 at 
\begin_inset Formula $f_{mid}=0.003$
\end_inset

 - slice of the 2D scan
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:cryptoswap-nondynamic-fee"

\end_inset

Initial optimization of cryptopool:
 no dynamic fee applied.
 Data over 6 years (Jan 2019 - Oct 2024) used
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Initially,
 we assume the fee to be always constant to find the approximately good range for 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $f_{mid}$
\end_inset

.
 In this simulation,
 we set 
\begin_inset Formula $f_{out}$
\end_inset

 to be equal to 
\begin_inset Formula $f_{mid}$
\end_inset

,
 and that turns the dynamic fee off.
 The results of such a scan are shown on Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:cryptoswap-nondynamic-fee"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

.
 One can notice that as concentrated liquidity becomes denser (e.g.
 
\begin_inset Formula $A$
\end_inset

 increases),
 the APR grows.
 However,
 around a certain threshold (around 
\begin_inset Formula $A=4$
\end_inset

),
 the APR becomes dropping in a step-wise manner.
 At that point,
 volatility becomes too high for the rebalance algorithm to follow,
 and the APR drops.
 When there's another place of high volatility on the price graph - we observe the second step forming.
 We should be choosing the highers value of 
\begin_inset Formula $A$
\end_inset

 before the first discontinuity.
 It is also interesting to note that the optimal 
\begin_inset Formula $f_{mid}$
\end_inset

 appears to be 
\begin_inset Formula $0.3\%$
\end_inset

 - similar to typical Uniswap 2 fee.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/noboost-apr.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Optimization of unboosted cryptoswap pool:
 
\begin_inset Formula $\left(f_{out},\gamma_{fee}\right)$
\end_inset

optimization
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/3-out_fee-fee_gamma.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Optimization of boosted cryptoswap pool:
 
\begin_inset Formula $\left(f_{out},\gamma_{fee}\right)$
\end_inset

optimization
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:dynamic-fee-optimization"

\end_inset

Final optimization step for standard 
\begin_inset Quotes eld
\end_inset

unboosted
\begin_inset Quotes erd
\end_inset

 and boosted cryptoswap pools.
 Data over 2 years (Jan 2023 - Oct 2024) used
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the next step,
 we optimize dynamic fee (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:dynamic-fee-optimization"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

).
 It appears that the 
\begin_inset Formula $f_{mid}$
\end_inset

 found previously with non-dynamic fees (
\begin_inset Formula $f_{mid}=0.3\%$
\end_inset

) holds for dynamic fees as well,
 and 
\begin_inset Formula $A$
\end_inset

 could be slightly higher than previously found.
 So we first set 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $f_{mid}$
\end_inset

 at the parameters found in the non-dynamic scan,
 and then scan 
\begin_inset Formula $\left(f_{out},\gamma_{fee}\right)$
\end_inset

.
 When we find optimal values - we can slightly vary 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $f_{mid}$
\end_inset

 to get the final adjustments and then rescan.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:dynamic-fee-optimization"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 shows the result.
 I also provide results of a similar optimization with no borrow rate donation feature for comparison.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/8-optimize-releverage-fee.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:releverage-sim-fee"

\end_inset

Optimizing releverage AMM fee (optimal value:
 
\begin_inset Formula $f=0.007$
\end_inset

)
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/4-growth-6-years.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:releverage-sim-6"

\end_inset

Simulation from Jan 2019 till Oct 2024:
 average APR = 
\begin_inset Formula $20\%$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/5-growth-2-years.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:releverage-sim-2"

\end_inset

Simulation from Jan 2023 till Oct 2024 (tail of Fig.
 b):
 average APR = 
\begin_inset Formula $9\%$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/6-growth-6-fail.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:releverage-sim-broken"

\end_inset

Example of too aggressive parameters (
\begin_inset Formula $A=4.8$
\end_inset

 instead of 
\begin_inset Formula $A=4.13$
\end_inset

).
 Partial loss is visible (in year 2021),
 however average APR is approximately the same
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:releverage-sim"

\end_inset

Simulation with releverage AMM removing impermanent loss.
 Data is obtained for BTC/USD price feed
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
While releverage algorithm will be described further,
 I reference the full simulation of releverage here (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:releverage-sim"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

).
 The releverage is made via a special AMM which is also simulated as arbitrage.
\end_layout

\begin_layout Standard
Noteworthy,
 simulation of releverage is separable from simulation of the base AMM (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:releverage"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

).
 It turns out that losses on releverage 
\begin_inset Formula $r_{loss}$
\end_inset

 from Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:releverage-loss"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 appears to be extremely close to twice the optimized returns of 
\begin_inset Formula $xy=k$
\end_inset

 pools (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:xyk-fee"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

) which makes the APR to be not higher than 
\begin_inset Formula $0$
\end_inset

 for 
\begin_inset Formula $xy=k$
\end_inset

 bonding curve.
 This result in itself is worth to study later.
 However,
 APR in Curve cryptopools is strictly higher than 
\begin_inset Formula $xy=k$
\end_inset

 returns when the parameters are optimal,
 which means that releverage should give a positive APR.
 We confirm that with direct simulations of the releverage AMM.
\end_layout

\begin_layout Standard
Simulation results from Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:releverage-sim"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 show promising numbers for BTC/USD returns.
 The graphs show value of the resultant LP position in BTC over time.
 Notable features of the simulation results:
\end_layout

\begin_layout Itemize
Dependency on the releverage AMM fee is very flat (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:releverage-sim-fee"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

);
\end_layout

\begin_layout Itemize
Average APR over 6 years is around 
\begin_inset Formula $20\%$
\end_inset

 (peaking over year 2021 to 
\begin_inset Formula $60\%$
\end_inset

) (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:releverage-sim-6"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

),
 however being just under 
\begin_inset Formula $10\%$
\end_inset

 in more calm (and bearish) market conditions (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:releverage-sim-2"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

);
\end_layout

\begin_layout Itemize
If concentration 
\begin_inset Formula $A$
\end_inset

 is set slightly higher than necessary - releverage algorithm experiences a loss at the point of the rebalance breaking down,
 however growth rate in calmer market conditions is higher,
 so the average APR over 6 years is the same (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:releverage-sim-broken"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

).
 This example shows how to estimate volatility risks in the product.
\end_layout

\begin_layout Section*
Releverage algorithm
\end_layout

\begin_layout Standard
Keeping leverage constant manually is not efficient,
 although can be done.
 Problem with manual approach is that the threshold price change at which it should happen is relatively high (10%) which makes variations in the returns very high (e.g.
 returns can go negative very often) (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:releverage"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/lvr-naive.pdf
	width 8cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Losses from manual releverage depending on a price change threshold for triggering it
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/lvr-amm.pdf
	width 8cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Losses from releverage via an AMM depending on the fee of the AMM
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:releverage"

\end_inset

Comparison of manual releverage and releverage via a special AMM
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Instead,
 a special AMM is used for releveraging.
 The AMM uses an external oracle with price 
\begin_inset Formula $p_{o}$
\end_inset

 for the asset which is being re-leveraged.
 The AMM keeps reserves of collateral 
\begin_inset Formula $y$
\end_inset

.
 Instead of keeping reserves of stablecoins,
 it borrows those having a debt 
\begin_inset Formula $d$
\end_inset

.
 When market price 
\begin_inset Formula $p$
\end_inset

 is equal to 
\begin_inset Formula $p_{o}$
\end_inset

,
 in order to keep the leverage 
\begin_inset Formula $L$
\end_inset

,
 ideal debt should be equal to:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\widetilde{d}=\frac{L-1}{L}p_{o}\widetilde{y},\label{eq:ideal-debt}
\end{equation}

\end_inset

where values with ~ mean that they are taken at the time when market price is equal to the oracle price.
 For example,
 one can see that for 
\begin_inset Formula $L=2$
\end_inset

 (our case) 
\begin_inset Formula $\widetilde{d}=p_{o}y/2$
\end_inset

,
 which matches the intuition of keeping constant leverage.
\end_layout

\begin_layout Standard
We keep leverage constant via a variant of 
\begin_inset Formula $xy=k$
\end_inset

 AMM with 
\begin_inset Formula $x$
\end_inset

 being represented as a function of oracle price and debt:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\left(x_{0}(p_{o})-d\right)y=I\left(p_{o}\right),\label{eq:inv}
\end{equation}

\end_inset

where invariant 
\begin_inset Formula $I$
\end_inset

 is constant at the same 
\begin_inset Formula $p_{o}$
\end_inset

,
 
\begin_inset Formula $x\equiv x_{0}\left(p_{o}\right)-d$
\end_inset

.
\end_layout

\begin_layout Standard
In order to find 
\begin_inset Formula $x_{o}\left(p_{o}\right)$
\end_inset

 function,
 let's use the ideal values for 
\begin_inset Formula $p=p_{o}$
\end_inset

and property of 
\begin_inset Formula $xy=k$
\end_inset

 invariant:
 
\begin_inset Formula $p=x/y$
\end_inset

.
 When we apply this to 
\begin_inset Formula $p=p_{o}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{x_{0}\left(p_{o}\right)-\widetilde{d}}{\widetilde{y}}=p_{o},
\end{equation}

\end_inset

and therefore,
 substituting Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:ideal-debt"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
x_{0}\left(p_{o}\right)=\frac{2L-1}{L}p_{o}\widetilde{y}.\label{eq:simple-solution}
\end{equation}

\end_inset

As an example (which we will use later to choose the right solution),
 at 
\begin_inset Formula $\widetilde{y}=2$
\end_inset

,
 
\begin_inset Formula $p_{o}=1$
\end_inset

,
 
\begin_inset Formula $L=2$
\end_inset

,
 
\begin_inset Formula $\widetilde{d}=1$
\end_inset

,
 we find 
\begin_inset Formula $x_{0}=3$
\end_inset

,
 and indeed,
 that satisfies 
\begin_inset Formula $x_{0}-\widetilde{d}=p_{o}\widetilde{y}$
\end_inset

.
\end_layout

\begin_layout Standard
Now,
 let's find the function 
\begin_inset Formula $x_{0}\left(p_{o}\right)$
\end_inset

 for 
\shape italic
any
\shape default
 current values of 
\begin_inset Formula $y$
\end_inset

 and 
\begin_inset Formula $d$
\end_inset

 (since 
\begin_inset Formula $y,$
\end_inset


\begin_inset Formula $d$
\end_inset

 and 
\begin_inset Formula $p_{o}$
\end_inset

 should fully define the state of the AMM).
 First,
 if we did know 
\begin_inset Formula $x_{0}$
\end_inset

 - we would be able to express 
\begin_inset Quotes eld
\end_inset

ideal
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $\widetilde{y}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\widetilde{y}=\frac{L}{2L-1}\frac{x_{0}}{p_{o}}.\label{eq:ideal-y}
\end{equation}

\end_inset

We also know that at constant 
\begin_inset Formula $p_{o}$
\end_inset

 the value of invariant 
\begin_inset Formula $I$
\end_inset

 is conserved and the same as at 
\begin_inset Quotes eld
\end_inset

ideal
\begin_inset Quotes erd
\end_inset

 parameters (e.g.
 
\begin_inset Formula $\widetilde{y}$
\end_inset

,
 
\begin_inset Formula $\widetilde{d}$
\end_inset

):
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
y\left(x_{0}-d\right)=\widetilde{y}\left(x_{0}-\frac{L-1}{L}p_{o}\widetilde{y}\right).\label{eq:invariant-conservation}
\end{equation}

\end_inset

Here we take 
\begin_inset Formula $x_{0}\equiv x_{0}\left(p_{o}\right)$
\end_inset

 for simplicity.
\end_layout

\begin_layout Standard
Now,
 when we substitute 
\begin_inset Formula $\widetilde{y}$
\end_inset

 expressed from 
\begin_inset Formula $x_{0}$
\end_inset

 in Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:ideal-y"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 into Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:invariant-conservation"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

,
 we obtain a quadratic equation for 
\begin_inset Formula $x_{0}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
x_{0}^{2}\left(\frac{L}{2L-1}\right)^{2}-p_{o}yx_{0}+p_{o}yd=0
\end{equation}

\end_inset

Given the 
\begin_inset Quotes eld
\end_inset

simple
\begin_inset Quotes erd
\end_inset

 obvious solution mentioned previously in Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:simple-solution"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

,
 we choose the larger root of the quadratic equation as the solution for 
\begin_inset Formula $x_{0}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
x_{0}\left(p_{o}\right)=\frac{p_{o}y+\sqrt{p_{o}^{2}y^{2}-4p_{o}yd\left(\frac{L}{2L-1}\right)^{2}}}{2\left(\frac{L}{2L-1}\right)^{2}}.\label{eq:x0}
\end{equation}

\end_inset

This expression defines everything necessary for the state of the AMM.
 Before any exchange,
 one should calculate 
\begin_inset Formula $x_{0}$
\end_inset

 for the current state,
 and it stays the same while we are on the same bonding curve and 
\begin_inset Formula $p_{o}$
\end_inset

 is unchanged.
\end_layout

\begin_layout Standard
Now let's calculate value in the AMM.
 In order to reduce noise,
 it makes sense to base it on 
\begin_inset Formula $p=p_{o}$
\end_inset

 setting (in this case,
 value obtained on chain would not be susceptible to sandwich attacks,
 for example):
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
V=\widetilde{y}p_{o}-d=\frac{1}{L}\widetilde{y}p_{o}=\frac{x_{0}}{2L-1},\label{eq:value}
\end{equation}

\end_inset

value of invariant in such conditions is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
I=\left(x_{0}-\widetilde{d}\right)\widetilde{y}=\frac{x_{0}^{2}}{p_{o}}\left(\frac{L}{2L-1}\right)^{2},\label{eq:inv-x0}
\end{equation}

\end_inset

so another way to express value in the pool 
\begin_inset Formula $V$
\end_inset

 is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
V=2\sqrt{Ip_{o}}-x_{0}.
\end{equation}

\end_inset

We can use 
\begin_inset Formula $V$
\end_inset

 when calculating shares when doing deposits and withdrawals.
\end_layout

\begin_layout Standard
From Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:inv-x0"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

,
 we can clearly see that 
\begin_inset Formula $x_{0}$
\end_inset

 is proportional to 
\begin_inset Formula $\sqrt{I}$
\end_inset

 at a given 
\begin_inset Formula $p_{o}$
\end_inset

 which appears useful when we work around deposits and withdrawals further.
\end_layout

\begin_layout Section*
Deposits and withdrawals
\end_layout

\begin_layout Standard
We are removing impermanent loss in curve Cryptoswap pool,
 and keeping 
\begin_inset Formula $L=2$
\end_inset

 leverage of its liquidity (LP tokens) for that.
\end_layout

\begin_layout Subsection*
Deposits
\end_layout

\begin_layout Standard
When deposit is happening,
 we deposit first in Cryptoswap pool,
 and take a loan with 
\begin_inset Formula $d$
\end_inset

 stablecoins against LP token created by this deposit.
 User brings just cryptocurrency (like BTC) with the amount 
\begin_inset Formula $c_{in}$
\end_inset

.
 So deposit works in the following sequence:
\end_layout

\begin_layout Itemize
User brings 
\begin_inset Formula $c_{in}$
\end_inset

 of cryptocurrency and specifies the debt 
\begin_inset Formula $\Delta d$
\end_inset

 (which has value equal to the value of cryptocurrency ideally,
 or can be calculated proportionally to balances in Cryptoswap);
\end_layout

\begin_layout Itemize
System takes a loan of 
\begin_inset Formula $\Delta d$
\end_inset

 stablecoins and deposits 
\begin_inset Formula $(\Delta d,c_{in})$
\end_inset

 in Cryptoswap,
 yielding 
\begin_inset Formula $l$
\end_inset

 LP tokens;
\end_layout

\begin_layout Itemize
Calculate value in Yield Basis AMM using Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:value"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 and 
\begin_inset Formula $x_{0}$
\end_inset

 calculated using Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:x0"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 for the state before deposit 
\begin_inset Formula $\left(d,y\right)$
\end_inset

 and after the deposit 
\begin_inset Formula $\left(d+\Delta d,y+l\right)$
\end_inset

;
\end_layout

\begin_layout Itemize
Calculate amount of YB tokens to mint for the depositor proportionally to the value increase from our deposit.
\end_layout

\begin_layout Subsection*
Witdrawals
\end_layout

\begin_layout Standard
When a user withdraws a fraction of liqudity,
 in order to not have any unfair disadvantage for liquidity providers,
 one cannot specify an arbitrary value of the debt.
 Instead,
 both collateral and debt are reduced by the same fraction equal to fraction of overall LP tokens being withdrawn.
 So withdrawal sequence inside the smart contract looks as the following:
\end_layout

\begin_layout Itemize
User brings 
\begin_inset Formula $t$
\end_inset

 LP tokens to withdraw.
 If supply of LP tokens is 
\begin_inset Formula $s$
\end_inset

,
 liquidity gets reduced by 
\begin_inset Formula $s/t$
\end_inset

;
\end_layout

\begin_layout Itemize
Collateral gets reduced by 
\begin_inset Formula $\delta c=cs/t$
\end_inset

,
 and debt gets reduced by 
\begin_inset Formula $\delta d=ds/t$
\end_inset

;
\end_layout

\begin_layout Itemize
Since collateral is LP tokens of cryptopool,
 we withdraw 
\begin_inset Formula $\delta c$
\end_inset

 LP tokens but in such a way that the amount of stablecoin withdrawn is exactly 
\begin_inset Formula $\delta d$
\end_inset

,
 and amount of cryptocurrency is kept varied as a function of 
\begin_inset Formula $\delta c$
\end_inset

 and 
\begin_inset Formula $\delta d$
\end_inset

,
 given by 
\family typewriter
withdraw_fixed_out
\family default
 method of the smart contract;
\end_layout

\begin_layout Itemize
Part of debt 
\begin_inset Formula $\delta d$
\end_inset

 gets repaid from the withdrawn stablecoins,
 and cryptocurrency withdrawn from cryptoswap gets passed to the user.
\end_layout

\begin_layout Section*
Splitting revenues between staked and unstaked liquidity
\end_layout

\begin_layout Standard
In Yield Basis,
 real yields are only going to those users who did not opt in to earn YB tokens (e.g.
 stake).
 If they did not stake - they earn real yield from fees.
 If they did - they don't earn any yield from fees,
 but they earn governance tokens from emissions.
 The system also earns admin fee which is taken from the fees earned and given to YB token stakers (e.g.
 veYB).
\end_layout

\begin_layout Standard
The fee portion going to veYB dynamically depends on how much is staked.
 Let's denote:
\end_layout

\begin_layout Itemize
\begin_inset Formula $s$
\end_inset

 - amount of LP tokens staked to earn YB tokens;
\end_layout

\begin_layout Itemize
\begin_inset Formula $T$
\end_inset

 - total amount of LP tokens;
\end_layout

\begin_layout Itemize
\begin_inset Formula $f_{\min}$
\end_inset

- minimal value of admin fee;
\end_layout

\begin_layout Itemize
\begin_inset Formula $r$
\end_inset

 - natural return rate (e.g.
 how much LPs would have been earning if no token system / staking / unstaking existed).
\end_layout

\begin_layout Standard
With those,
 admin fee will be:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
f_{a}=1-\left(1-f_{\min}\right)\sqrt{1-\frac{s}{T}}.
\end{equation}

\end_inset

This formula has the following properties:
\end_layout

\begin_layout Itemize
if nothing is staked (
\begin_inset Formula $s/T=0$
\end_inset

),
 system admin fee is equal to 
\begin_inset Formula $f_{\min}$
\end_inset

 (for example,
 
\begin_inset Formula $10\%$
\end_inset

),
 and the rest (
\begin_inset Formula $90\%$
\end_inset

) goes to LPs;
\end_layout

\begin_layout Itemize
if everything is staked (
\begin_inset Formula $s/T=100\%$
\end_inset

),
 system admin fee is equal to 
\begin_inset Formula $100\%$
\end_inset

 because LPs are all earning YB tokens and nothing else.
\end_layout

\begin_layout Standard
Let's consider returns for the unstaked 
\begin_inset Formula $r_{us}$
\end_inset

 part in different limits of how much is staked.
 If 
\begin_inset Formula $s\rightarrow0$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
f_{a} & \rightarrow & f_{\min,}\\
r_{us} & \rightarrow & \text{\left(1-f_{\min}\right)r.}
\end{eqnarray}

\end_inset

And if 
\begin_inset Formula $s\rightarrow T$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
f_{a} & \rightarrow & 100\%,\\
r_{us} & \rightarrow & \infty.
\end{eqnarray}

\end_inset

The infinite 
\begin_inset Formula $r_{us}$
\end_inset

while admin fee is going to 
\begin_inset Formula $100\%$
\end_inset

 is deliberate and the reason why the admin fee formula is constructed this way.
\end_layout

\begin_layout Standard
From Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:value"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

,
 total value of liquidity expressed in crypto is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
v=\frac{x_{0}}{\left(2L-1\right)p_{o}}.
\end{equation}

\end_inset

We define:
\end_layout

\begin_layout Itemize
\begin_inset Formula $v_{-1}$
\end_inset

 - previous total value of liquidity;
\end_layout

\begin_layout Itemize
\begin_inset Formula $v_{+1}$
\end_inset

 - new total value of liquidity before admin fee is taken;
\end_layout

\begin_layout Itemize
\begin_inset Formula $v_{s}$
\end_inset

 - value assigned to staked liquidity (which earns no fees);
\end_layout

\begin_layout Itemize
\begin_inset Formula $v_{us}$
\end_inset

 - value assigned to unstaked liquidity (the one which earns fees);
\end_layout

\begin_layout Itemize
\begin_inset Formula $v_{s*}$
\end_inset

 - 
\begin_inset Quotes eld
\end_inset

ideal
\begin_inset Quotes erd
\end_inset

 value of staked liquidity (the it'd have if we have no losses);
\end_layout

\begin_layout Itemize
\begin_inset Formula $a$
\end_inset

 - running value of collected admin fees.
\end_layout

\begin_layout Standard
Let's look at the situation when the value 
\begin_inset Formula $v$
\end_inset

 is just changed due to trades (not deposits or withdrawals).
 Then running value of admin fees increases by:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\Delta a=\left(v_{1}-v_{-1}\right)f_{a},
\end{equation}

\end_inset

and value to be split between 
\begin_inset Formula $v_{s}$
\end_inset

 and 
\begin_inset Formula $v_{us}$
\end_inset

 is the rest:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\Delta v_{use}=\left(v_{1}-v_{-1}\right)\left(1-f_{a}\right).
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
After admin fee is taken,
 new total value of liquidity is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
v_{1}^{\prime}=v_{-1}+\Delta v_{use}.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
If we did not have any losses,
 staked liquidity value us equal to its upper limit:
 
\begin_inset Formula $v_{s}=v_{s*}$
\end_inset

.
 If we,
 however,
 happened to experience a loss,
 e.g.
 
\begin_inset Formula $\Delta v_{use}<0$
\end_inset

,
 we share this loss between staked and unstaked liquidity:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\Delta v_{s}=\Delta v_{use}\frac{s}{T},\qquad\Delta v_{use}\le0.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
If we had profit but previously have loss,
 then 
\begin_inset Formula $v_{s}<v_{s*}$
\end_inset

,
 and we need to add value to 
\begin_inset Formula $v_{s}$
\end_inset

 until it reaches 
\begin_inset Formula $v_{s*}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\Delta v_{s}=\min\left(\Delta v_{use}\frac{s}{T},\max\left(v_{s*}-v_{s},0\right)\right),\qquad\Delta v_{use}>0.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The amount of unstaked LP tokens does not change if no deposits/withdrawals are happening,
 so one LP token represents a value-accruing cryptocurrency.
 Without deposits or withdrawals then 
\begin_inset Formula $T-s=\text{const}$
\end_inset

.
 The value of 
\begin_inset Quotes eld
\end_inset

staked
\begin_inset Quotes erd
\end_inset

 tokens,
 however,
 experiences negative rebases.
 Let's call reduction of number of staked LP tokens as 
\begin_inset Formula $\delta s$
\end_inset

.
 Then total and staked tokens after such a rebase accordingly change:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
s^{\prime} & = & s-\delta s,\\
T^{\prime} & = & T-\delta s.
\end{eqnarray}

\end_inset

The ratio between these values should be the same as ratio between new staked and total values:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{s-\delta s}{T-\delta s}=\frac{v_{s}^{\prime}}{v_{1}^{\prime}}.
\end{equation}

\end_inset

From this:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\delta s=\frac{sv_{1}^{\prime}-Tv_{s}^{\prime}}{v_{1}^{\prime}-v_{s}^{\prime}}.
\end{equation}

\end_inset


\end_layout

\begin_layout Section*
Arbitraging leverage AMM and virtual pool
\end_layout

\begin_layout Standard
When we leverage liquidity,
 the AMM exchanges between stablecoins and LP token of cryptopool.
 Arbitrage trader,
 however,
 wants to exchange between real cryptocurrency and stablecoin,
 not LP token.
 Therefore,
 we create a 
\begin_inset Quotes eld
\end_inset

virtual pool
\begin_inset Quotes erd
\end_inset

 smart contract which combines leverage AMM,
 cryptopool and stablecoin (crvUSD) flash loans for that task.
\end_layout

\begin_layout Subsection*
Exchange from stablecoin to cryptoasset in virtual pool
\end_layout

\begin_layout Standard
...
\end_layout

\begin_layout Subsection*
Exchange from cryptoasset to stablecoin in virtual pool
\end_layout

\begin_layout Standard
...
\end_layout

\end_body
\end_document
