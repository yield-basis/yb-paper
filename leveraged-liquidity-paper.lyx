#LyX 2.4 created this file. For more info see https://www.lyx.org/
\lyxformat 620
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass revtex4-2
\use_default_options true
\maintain_unincluded_children no
\language american
\language_package default
\inputencoding utf8
\fontencoding auto
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_roman_osf false
\font_sans_osf false
\font_typewriter_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics pdftex
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement class
\float_alignment class
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Eliminating impermanent loss by leveraged liquidity"
\pdf_author "Michael Egorov"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_formatted_ref 0
\use_minted 0
\use_lineno 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tablestyle default
\tracking_changes false
\output_changes false
\change_bars false
\postpone_fragile_content true
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\docbook_table_output 0
\docbook_mathml_prefix 1
\end_header

\begin_body

\begin_layout Title
Eliminating impermanent loss by leveraged liquidity
\end_layout

\begin_layout Author
Michael Egorov
\end_layout

\begin_layout Date
12 June 2025
\end_layout

\begin_layout Abstract
Ever since Automatic Market Makers (AMMs) were introduced in Decentralized Finance (DeFi),
 they have suffered from 
\begin_inset Quotes eld
\end_inset

impermanent loss
\begin_inset Quotes erd
\end_inset

 (IL).
 As a result,
 AMMs often perform worse as store of value than simply holding the components of liquidity idle.
 In this work,
 I propose a method to eliminate IL and price the position similarly to an individual component of liquidity while still earning exchange fees.
 Simulations show,
 for example,
 that BTC/USD liquidity can earn around 
\begin_inset Formula $20\%$
\end_inset

 APR (averaged over 6 years),
 with price exposure similar to BTC.
 The same method is also applicable to other cryptocurrencies.
\end_layout

\begin_layout Section*
General idea
\end_layout

\begin_layout Standard
In Curve Cryptoswap AMM,
 the price of liquidity (excluding earned trading fees) is approximately calculated similarly to that in classic 
\begin_inset Formula $xy=k$
\end_inset

 invariant,
 where 
\begin_inset Formula $p_{LP}=\sqrt{p}$
\end_inset

.
 Here,
 
\begin_inset Formula $p$
\end_inset

 is price of token 
\begin_inset Formula $y$
\end_inset

 (for example,
 BTC) in terms of token 
\begin_inset Formula $x$
\end_inset

 (for example,
 USD).
 This is where impermanent loss comes from:
 for example 
\begin_inset Formula $\sqrt{p}<1/2+p/2$
\end_inset

 for all 
\begin_inset Formula $p\neq1$
\end_inset

.
 This means that,
 with trading fee set to zero,
 holding an asset with an initial price of 
\begin_inset Formula $1$
\end_inset

 and an equal amount of USD would outperform always-rebalanced liquidity.
\end_layout

\begin_layout Standard
Now,
 consider 
\shape italic
compounding
\shape default
 leverage,
 denoted by 
\begin_inset Formula $L$
\end_inset

.
 We define compounding leverage as the number determining the fraction of debt relative to collateral size.
 If one borrows against any token with a price 
\begin_inset Formula $p^{\prime}$
\end_inset

 to buy even more of that token,
 and keep the loan value 
\begin_inset Formula $d$
\end_inset


\shape italic
always
\shape default
 equal to 
\begin_inset Formula $d=V_{c}\left(1-1/L\right)$
\end_inset

,
 where 
\begin_inset Formula $V_{c}$
\end_inset

 is value of collateral,
 the position will remain leveraged with compounding leverage 
\begin_inset Formula $L$
\end_inset

 at all times.
 The price of the whole position 
\begin_inset Formula $p_{*}$
\end_inset

 will be proportional to 
\begin_inset Formula $\left(p^{\prime}\right)^{L}$
\end_inset

.
\end_layout

\begin_layout Standard
Let's prove this formula.
 Suppose the value of collateral 
\begin_inset Formula $V_{c}$
\end_inset

 changes by a small amount 
\begin_inset Formula $\delta V_{c}$
\end_inset

.
 We split compounding leverage in three steps:
 growth of collateral price,
 changing the debt to maintain the 
\begin_inset Formula $d/V_{c}$
\end_inset

 ratio,
 and adjusting the collateral amount.
 We take the collateral amount during the first step and the collateral price during the second step as constant.
 At equilibrium,
 if the collateral amount is 
\begin_inset Formula $y$
\end_inset

 and its price is 
\begin_inset Formula $p^{\prime}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
V_{*}=V_{c}-d=\frac{V_{c}}{L}=\frac{p^{\prime}y}{L}.
\end{equation}

\end_inset

Consider now the first step;
 in it,
 the value of leverage position 
\begin_inset Formula $V_{*}$
\end_inset

 changes as follows:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
V_{*}+\delta V_{*}=V_{c}-d+\delta V_{c}-\delta d\stackrel{d=\textbf{const}}{=}\left(V_{c}+\delta V_{c}\right)-d=\left(V_{c}-d\right)+\delta V_{c}=V_{*}+\delta V_{c}=V_{*}+y\delta p^{\prime},
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\delta V_{*}}{V_{*}}=\frac{y\delta p^{\prime}}{p^{\prime}y/L}=L\frac{\delta p^{\prime}}{p^{\prime}}=L\frac{\delta V_{c}}{V_{c}}.
\end{equation}

\end_inset

Where the latter equality holds because the amount of collateral is constant in the first step,
 and 
\begin_inset Formula $V_{c}=yp'$
\end_inset

.
 
\end_layout

\begin_layout Standard
Consider now the other way whereby the value of the position can be changed,
 namely,
 the change in the amount of collateral (step 3).
 When the collateral is changed with the price and the debt kept fixed,
 the value of leverage position 
\begin_inset Formula $V_{*}$
\end_inset

 would change as:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
V_{*}+\delta V_{*}=V_{c}-d+\delta V_{c}-\delta d\stackrel{d=const}{=}\left(V_{c}+\delta V_{c}\right)-d=\left(V_{c}-d\right)+\delta V_{c}=V_{*}+\delta V_{c}=V_{*}+p'\delta y
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
And,
 likewise,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\delta V_{*}}{V_{*}}=\frac{p'\delta y}{p^{\prime}y/L}=L\frac{\delta y}{y}=L\frac{\delta V_{c}}{V_{c}}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
We have,
 therefore,
 obtained that for any way of changing the value of the collateral,
 the change in the value of the leveraged position obeys the relationship:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\delta V_{*}}{V_{*}}=L\frac{\delta V_{c}}{V_{c}}.\label{eq:leveraged-value}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
We have so far ignored the second step;
 we now show that it will not lead to a degradation of value.
 As the debt is changed in such a way as to be constrained by a linear relationship with 
\begin_inset Formula $V_{c}$
\end_inset

,
 consider a combination of second and third steps taken together.
 By definition:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
d=V_{c}\left(1-1/L\right)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Then the change in the value of the leveraged position will be given as:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
V_{*}+\delta V_{*}=V_{c}-d+\delta V_{c}-\delta d=\left(V_{c}+\delta V_{c}\right)-d-\left(1-1/L\right)\delta V_{c}=\left(V_{c}-d\right)+\delta V_{c}-\left(1-1/L\right)\delta V_{c}=V_{*}+\frac{1}{L}\delta V_{c}=V_{*}+\frac{1}{L}p'\delta y
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\delta V_{*}}{V_{*}}=\frac{\frac{1}{L}p'\delta y}{p^{\prime}y/L}=\frac{\delta y}{y}=\frac{\delta V_{c}}{V_{c}}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
It follows that in such a combined step,
 the value of the leveraged position behaves exactly like the value of the collateral,
 and,
 therefore,
 the total rate of the change in the value will be given by the preceding step.
 Intuitively,
 this result corresponds to the observation that this smooth change in the amount of collateral is purely begotten by and commensurate to the change in the debt.
 Should we have bundled the first and the second steps instead of the first and the third,
 the results will have been the same,
 as demonstrated by the above study in the relative rate of change of the leveraged position value.
 
\end_layout

\begin_layout Standard
It follows,
 then,
 that only one of the steps produces a nontrivial result for the rates of change of the collateral and position values,
 and for either step taken as such,
 the relationship is given by Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:leveraged-value"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

.
\end_layout

\begin_layout Standard
Integrating that gives:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\log V_{*}=L\log V_{c}+\textbf{const}.
\end{equation}

\end_inset

Exponentiation of both sides gives:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
V_{*}\propto\left(V_{c}\right)^{L}.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/sqrt.pdf
	width 9cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:scheme-of-leverage"

\end_inset

Schematic of leveraging liquidity to have no impermanent loss
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Therefore,
 if 
\begin_inset Formula $L=2$
\end_inset

 and 
\begin_inset Formula $p_{LP}=\sqrt{p}$
\end_inset

,
 leveraging liquidity would give 
\begin_inset Formula $V_{*}\propto\left(\sqrt{p}\right)^{2}=p$
\end_inset

,
 which is simply the price of token 
\begin_inset Formula $y$
\end_inset

,
 while the position earns exchange fees in addition (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:scheme-of-leverage"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

).
 While this idea appears simple,
 it does not work with the 
\begin_inset Formula $xy=k$
\end_inset

 invariant.
 The losses from rebalancing to maintain constant leverage (i.e.
 
\shape italic
releverage losses
\shape default
) are not lower than the pool's earnings.
 The situation is significantly improved with Curve Cryptoswap,
 as demonstrated in the simulations.
\end_layout

\begin_layout Standard
Another useful property is that for 
\begin_inset Formula $L=2$
\end_inset

,
 the size of the loan is equal to half the size of liquidity leveraged,
 on average.
 But USD portion of that liquidity is also equal to half of its total value.
 Therefore,
 if leverage is kept constant and equal to 2,
 liquidity will on average have enough USD to close the position,
 which is a very convenient property.
\end_layout

\begin_layout Standard
APR of the resulting position can be expressed as:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
APR=2r_{pool}-\left(r_{borrow}+r_{loss}\right).\label{eq:releverage-loss}
\end{equation}

\end_inset

This method only works when the pool rate (multiplied by leverage) is significantly higher than the sum of borrow rate and losses introduced by releverage of the position.
 It's important to point out that this expression is only approximate,
 and a more precise APR can be obtained by simulating both the cryptopool and releverage.
\end_layout

\begin_layout Section*
Using CDP interest rate for rebalancing
\end_layout

\begin_layout Standard
In Curve,
 all liquidity pools have concentrated liquidity.
 However,
 when the price of the asset is not constant,
 concentrated liquidity automatically moves towards the current price (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:move-concentrated"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/shift-distribution.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:move-concentrated"

\end_inset

Movement of concentrated liquidity towards current prices
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/feed-fees.pdf
	width 9cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Subsidy for moving concentrated liquidity
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Automatic management of concentrated liquidity
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section*
Simulations and pool optimization
\end_layout

\begin_layout Standard
All simulations in this paper are performed by simulating arbitrage between the AMM and an external price feed (usually taken from Binance).
 In this setup,
 the AMM pool is arbitraged against an infinitely deep 
\begin_inset Quotes eld
\end_inset

heatsink
\begin_inset Quotes erd
\end_inset

 whose price changes between highs and lows of the candles of the feed's price candles.
 All AMM volume is assumed to come only from arbitrage between the AMM's current state and external prices.
 If the arbitrage profit is smaller than a certain threshold value (typically 
\begin_inset Formula $0.03\%$
\end_inset

),
 no trade occurs.
 Trading volume also stops once the arbitrage volume reaches half of the total exchange volume in the pair,
 although this has only minor impact in the simulations.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/7-xyk-fee-APY.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:xyk-fee"

\end_inset

Reference study:
 optimizing 
\begin_inset Formula $xy=k$
\end_inset

 pool fee.
 Data over 2 years (Jan 2023 - Oct 2024) used
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
First,
 we simulate 
\begin_inset Formula $xy=k$
\end_inset

 bonding curve (e.g.
 like Uniswap2) as a sanity check of the method (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:xyk-fee"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

).
 The only adjustable parameter in this AMM is its fee.
 There is a clear maximum in the dependency of APR on the AMM fee,
 but it is fair to say that over the simulated range (1 Jan 2023 - 1 Nov 2024) the APR of 
\begin_inset Formula $xy=k$
\end_inset

 AMM appears to be around 
\begin_inset Formula $3\%$
\end_inset

.
 This APR is in addition to what the value 
\begin_inset Formula $xy=k$
\end_inset

 bonding curve would yield if the AMM fee were 
\begin_inset Formula $0$
\end_inset

 (e.g.
 on top of unremoved impermanent loss).
\end_layout

\begin_layout Standard
Simulation for cryptoswap is more complicated.
 I have found that replacing cryptoswap invariant with stableswap invariant,
 while keeping the algorithm of the cryptoswap unchanged,
 gives better results when a subsidy with crvUSD interest rate is used while having less adjustable parameters.
 In this simulation we set borrow rate to 
\begin_inset Formula $10\%$
\end_inset

 meaning that 
\begin_inset Formula $-5\%$
\end_inset

 APR is spent on subsidizing liquidity rebalancing and continuously taken from LPs (while they earn fees).
 If we use stableswap invariant,
 parameter optimization seeks the maximum APR within a parameter space that includes 
\begin_inset Formula $A$
\end_inset

 (concentration parameter),
 
\begin_inset Formula $f_{mid}$
\end_inset

 (minimum AMM fee),
 
\begin_inset Formula $f_{out}$
\end_inset

 (maximum AMM fee) and 
\begin_inset Formula $\gamma_{fee}$
\end_inset

 (fee steepness parameter).
 Ideally the borrow rate should also be optimized since we are in full control of it,
 but this was not done in these simulations (this will be addressed in future work).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/1-A-fee-APY.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Optimizing concentration parameter 
\begin_inset Formula $A$
\end_inset

 and fee 
\begin_inset Formula $f_{mid}$
\end_inset

 simultaneously
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/2-A-APY.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Optimizing concentration parameter 
\begin_inset Formula $A$
\end_inset

 at 
\begin_inset Formula $f_{mid}=0.003$
\end_inset

 - slice of the 2D scan
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:cryptoswap-nondynamic-fee"

\end_inset

Initial optimization of cryptopool:
 no dynamic fee applied.
 Data over 6 years (Jan 2019 - Oct 2024) used
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Initially,
 we assume the fee to be always constant to approximately find the good range for 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $f_{mid}$
\end_inset

.
 In this simulation,
 we set 
\begin_inset Formula $f_{out}$
\end_inset

 to be equal to 
\begin_inset Formula $f_{mid}$
\end_inset

,
 which disables the dynamic fee.
 The results of such a scan are shown on Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:cryptoswap-nondynamic-fee"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

.
 As concentrated liquidity becomes denser (e.g.
 
\begin_inset Formula $A$
\end_inset

 increases),
 the APR grows.
 However,
 around a certain threshold (around 
\begin_inset Formula $A=4$
\end_inset

),
 the APR drops in a step-wise manner.
 At that point,
 volatility becomes too high for the rebalance algorithm to follow.
 When there's another place of high volatility on the price graph - we observe the second step forming.
 We should be choosing the highest value of 
\begin_inset Formula $A$
\end_inset

 before the first discontinuity.
 It is also notable that the optimal 
\begin_inset Formula $f_{mid}$
\end_inset

 appears to be 
\begin_inset Formula $0.3\%$
\end_inset

 - similar to the typical Uniswap 2 fee.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/noboost-apr.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Optimization of unboosted cryptoswap pool:
 
\begin_inset Formula $\left(f_{out},\gamma_{fee}\right)$
\end_inset

optimization
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/3-out_fee-fee_gamma.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Optimization of boosted cryptoswap pool:
 
\begin_inset Formula $\left(f_{out},\gamma_{fee}\right)$
\end_inset

optimization
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:dynamic-fee-optimization"

\end_inset

Final optimization step for standard 
\begin_inset Quotes eld
\end_inset

unboosted
\begin_inset Quotes erd
\end_inset

 and boosted cryptoswap pools.
 Data over 2 years (Jan 2023 - Oct 2024) used
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Next,
 we optimize for dynamic fee (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:dynamic-fee-optimization"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

).
 It appears that the 
\begin_inset Formula $f_{mid}$
\end_inset

 found previously with non-dynamic fees (
\begin_inset Formula $f_{mid}=0.3\%$
\end_inset

) also applies to dynamic fees,
 and the optimal 
\begin_inset Formula $A$
\end_inset

 could be slightly higher than previously found.
 We first set 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $f_{mid}$
\end_inset

 at the parameters found in the non-dynamic scan,
 and then scan 
\begin_inset Formula $\left(f_{out},\gamma_{fee}\right)$
\end_inset

.
 Once we find optimal values - we can slightly vary 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $f_{mid}$
\end_inset

 to get the final adjustments and then rescan.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:dynamic-fee-optimization"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 shows the result.
 For comparison,
 I also present optimization results without the borrow rate donation feature.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/8-optimize-releverage-fee.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:releverage-sim-fee"

\end_inset

Optimizing releverage AMM fee (optimal value:
 
\begin_inset Formula $f=0.007$
\end_inset

)
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/4-growth-6-years.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:releverage-sim-6"

\end_inset

Simulation from Jan 2019 till Oct 2024:
 average APR = 
\begin_inset Formula $20\%$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/5-growth-2-years.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:releverage-sim-2"

\end_inset

Simulation from Jan 2023 till Oct 2024 (tail of Fig.
 b):
 average APR = 
\begin_inset Formula $9\%$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/6-growth-6-fail.pdf
	width 7cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:releverage-sim-broken"

\end_inset

Example of too aggressive parameters (
\begin_inset Formula $A=4.8$
\end_inset

 instead of 
\begin_inset Formula $A=4.13$
\end_inset

).
 Partial loss is visible (in year 2021),
 however average APR is approximately the same
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:releverage-sim"

\end_inset

Simulation with releverage AMM removing impermanent loss.
 Data is obtained for BTC/USD price feed
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
While the releverage algorithm will be described om detail later,
 I reference the full simulation of releverage here (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:releverage-sim"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

).
 The releverage is made via a special AMM which is also simulated as arbitrage.
\end_layout

\begin_layout Standard
Noteworthy,
 simulation of releverage is separable from simulation of the base AMM (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:releverage"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

).
 It turns out that losses on releverage 
\begin_inset Formula $r_{loss}$
\end_inset

 from Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:releverage-loss"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 appears to be extremely close to twice the optimized returns of 
\begin_inset Formula $xy=k$
\end_inset

 pools (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:xyk-fee"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

) results in the APR to be not higher than 
\begin_inset Formula $0$
\end_inset

 for 
\begin_inset Formula $xy=k$
\end_inset

 bonding curve.
 This is worth further study.
 However,
 the APR in Curve cryptopools is consistently higher than 
\begin_inset Formula $xy=k$
\end_inset

 returns when the parameters are optimal,
 indicating that releverage should produce a positive APR.
 We confirm this with direct simulations of the releverage AMM.
\end_layout

\begin_layout Standard
Simulation results from Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:releverage-sim"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 show promising BTC/USD returns.
 The graphs display the value of the resultant LP position in BTC over time.
 Notable features of the simulation include:
\end_layout

\begin_layout Itemize
Dependency on the releverage AMM fee is very flat (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:releverage-sim-fee"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

);
\end_layout

\begin_layout Itemize
Average APR over 6 years is around 
\begin_inset Formula $20\%$
\end_inset

 (peaking over year 2021 to 
\begin_inset Formula $60\%$
\end_inset

) (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:releverage-sim-6"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

),
 however being just under 
\begin_inset Formula $10\%$
\end_inset

 in more calm (and bearish) market conditions (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:releverage-sim-2"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

);
\end_layout

\begin_layout Itemize
If concentration 
\begin_inset Formula $A$
\end_inset

 is set slightly higher than necessary - releverage algorithm experiences a loss at the point of the rebalance breaking down,
 however growth rate in calmer market conditions is higher,
 so the average APR over 6 years remains unchanded (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:releverage-sim-broken"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

).
 This example shows how to estimate volatility risks in the product.
\end_layout

\begin_layout Section*
Releverage algorithm
\end_layout

\begin_layout Standard
Keeping leverage constant manually is inefficient,
 though it can be done.
 The problem with the manual approach is that the threshold price change required to trigger adjustment is relatively high (10%) which leads to large fluctuations in returns (e.g.
 returns can go negative very often) (Fig.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:releverage"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/lvr-naive.pdf
	width 8cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Losses from manual releverage depending on a price change threshold for triggering it
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement document
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/lvr-amm.pdf
	width 8cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Losses from releverage via an AMM depending on the fee of the AMM
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:releverage"

\end_inset

Comparison of manual releverage and releverage via a special AMM
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Instead,
 a special AMM is used for releveraging.
 The AMM uses an external oracle with price 
\begin_inset Formula $p_{o}$
\end_inset

 for the asset which is being re-leveraged and holds reserves of collateral 
\begin_inset Formula $y$
\end_inset

.
 Rather than holding reserves of stablecoins,
 it borrows them,
 resulting in a debt 
\begin_inset Formula $d$
\end_inset

.
 To maintain leverage 
\begin_inset Formula $L$
\end_inset

,
 when the market price 
\begin_inset Formula $p$
\end_inset

 is equal to 
\begin_inset Formula $p_{o}$
\end_inset

,
 the ideal debt should be:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\widetilde{d}=\frac{L-1}{L}p_{o}\widetilde{y}.\label{eq:ideal-debt}
\end{equation}

\end_inset

Here,
 values with a tilde (~) indicate they are taken at the time when market price is equal to the oracle price.
 For example,
 one can see that for 
\begin_inset Formula $L=2$
\end_inset

 (our case) 
\begin_inset Formula $\widetilde{d}=p_{o}y/2$
\end_inset

,
 which matches the intuition of maintaining constant leverage.
\end_layout

\begin_layout Standard
We maintain constant leverage using a variant of 
\begin_inset Formula $xy=k$
\end_inset

 AMM with 
\begin_inset Formula $x$
\end_inset

 defined as a function of oracle price and debt:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\left(x_{0}(p_{o})-d\right)y=I\left(p_{o}\right),\label{eq:inv}
\end{equation}

\end_inset

where invariant 
\begin_inset Formula $I$
\end_inset

 is constant at the same 
\begin_inset Formula $p_{o}$
\end_inset

,
 
\begin_inset Formula $x\equiv x_{0}\left(p_{o}\right)-d$
\end_inset

.
\end_layout

\begin_layout Standard
In order to find 
\begin_inset Formula $x_{o}\left(p_{o}\right)$
\end_inset

 function,
 let's use the ideal values for 
\begin_inset Formula $p=p_{o}$
\end_inset

and property of 
\begin_inset Formula $xy=k$
\end_inset

 invariant:
 
\begin_inset Formula $p=x/y$
\end_inset

.
 When we apply this to 
\begin_inset Formula $p=p_{o}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{x_{0}\left(p_{o}\right)-\widetilde{d}}{\widetilde{y}}=p_{o},
\end{equation}

\end_inset

and therefore,
 substituting Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:ideal-debt"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
x_{0}\left(p_{o}\right)=\frac{2L-1}{L}p_{o}\widetilde{y}.\label{eq:simple-solution}
\end{equation}

\end_inset

As an example (which we will use later to choose the right solution),
 at 
\begin_inset Formula $\widetilde{y}=2$
\end_inset

,
 
\begin_inset Formula $p_{o}=1$
\end_inset

,
 
\begin_inset Formula $L=2$
\end_inset

,
 
\begin_inset Formula $\widetilde{d}=1$
\end_inset

,
 we find 
\begin_inset Formula $x_{0}=3$
\end_inset

,
 and indeed,
 that satisfies 
\begin_inset Formula $x_{0}-\widetilde{d}=p_{o}\widetilde{y}$
\end_inset

.
\end_layout

\begin_layout Standard
Now,
 let's find the function 
\begin_inset Formula $x_{0}\left(p_{o}\right)$
\end_inset

 for 
\shape italic
any
\shape default
 current values of 
\begin_inset Formula $y$
\end_inset

 and 
\begin_inset Formula $d$
\end_inset

 (since 
\begin_inset Formula $y,$
\end_inset


\begin_inset Formula $d$
\end_inset

 and 
\begin_inset Formula $p_{o}$
\end_inset

 should fully define the state of the AMM).
 First,
 if we did know 
\begin_inset Formula $x_{0}$
\end_inset

 - we would be able to express 
\begin_inset Quotes eld
\end_inset

ideal
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $\widetilde{y}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\widetilde{y}=\frac{L}{2L-1}\frac{x_{0}}{p_{o}}.\label{eq:ideal-y}
\end{equation}

\end_inset

We also know that at constant 
\begin_inset Formula $p_{o}$
\end_inset

 the value of invariant 
\begin_inset Formula $I$
\end_inset

 is conserved and the same as at 
\begin_inset Quotes eld
\end_inset

ideal
\begin_inset Quotes erd
\end_inset

 parameters (e.g.
 
\begin_inset Formula $\widetilde{y}$
\end_inset

,
 
\begin_inset Formula $\widetilde{d}$
\end_inset

):
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
y\left(x_{0}-d\right)=\widetilde{y}\left(x_{0}-\frac{L-1}{L}p_{o}\widetilde{y}\right).\label{eq:invariant-conservation}
\end{equation}

\end_inset

Here we take 
\begin_inset Formula $x_{0}\equiv x_{0}\left(p_{o}\right)$
\end_inset

 for simplicity.
\end_layout

\begin_layout Standard
Now,
 when we substitute 
\begin_inset Formula $\widetilde{y}$
\end_inset

 expressed from 
\begin_inset Formula $x_{0}$
\end_inset

 in Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:ideal-y"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 into Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:invariant-conservation"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

,
 we obtain a quadratic equation for 
\begin_inset Formula $x_{0}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
x_{0}^{2}\left(\frac{L}{2L-1}\right)^{2}-p_{o}yx_{0}+p_{o}yd=0
\end{equation}

\end_inset

Given the 
\begin_inset Quotes eld
\end_inset

simple
\begin_inset Quotes erd
\end_inset

 obvious solution mentioned previously in Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:simple-solution"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

,
 we choose the larger root of the quadratic equation as the solution for 
\begin_inset Formula $x_{0}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
x_{0}\left(p_{o}\right)=\frac{p_{o}y+\sqrt{p_{o}^{2}y^{2}-4p_{o}yd\left(\frac{L}{2L-1}\right)^{2}}}{2\left(\frac{L}{2L-1}\right)^{2}}.\label{eq:x0}
\end{equation}

\end_inset

This expression defines everything necessary for the state of the AMM.
 Before any exchange,
 one should calculate 
\begin_inset Formula $x_{0}$
\end_inset

 for the current state,
 and it stays the same while we are on the same bonding curve and 
\begin_inset Formula $p_{o}$
\end_inset

 is unchanged.
\end_layout

\begin_layout Standard
Now let's calculate value in the AMM.
 In order to reduce noise,
 it makes sense to base it on 
\begin_inset Formula $p=p_{o}$
\end_inset

 setting (in this case,
 value obtained on chain would not be susceptible to sandwich attacks,
 for example):
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
V=\widetilde{y}p_{o}-d=\frac{1}{L}\widetilde{y}p_{o}=\frac{x_{0}}{2L-1},\label{eq:value}
\end{equation}

\end_inset

value of invariant in such conditions is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
I=\left(x_{0}-\widetilde{d}\right)\widetilde{y}=\frac{x_{0}^{2}}{p_{o}}\left(\frac{L}{2L-1}\right)^{2},\label{eq:inv-x0}
\end{equation}

\end_inset

so another way to express value in the pool 
\begin_inset Formula $V$
\end_inset

 is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
V=2\sqrt{Ip_{o}}-x_{0}.
\end{equation}

\end_inset

We can use 
\begin_inset Formula $V$
\end_inset

 when calculating shares when doing deposits and withdrawals.
\end_layout

\begin_layout Standard
From Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:inv-x0"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

,
 we can clearly see that 
\begin_inset Formula $x_{0}$
\end_inset

 is proportional to 
\begin_inset Formula $\sqrt{I}$
\end_inset

 at a given 
\begin_inset Formula $p_{o}$
\end_inset

 which appears useful when we work around deposits and withdrawals further.
\end_layout

\begin_layout Section*
Deposits and withdrawals
\end_layout

\begin_layout Standard
We are removing impermanent loss in curve Cryptoswap pool,
 and keeping 
\begin_inset Formula $L=2$
\end_inset

 leverage of its liquidity (LP tokens) for that.
\end_layout

\begin_layout Subsection*
Deposits
\end_layout

\begin_layout Standard
When depositing,
 funds are first provided to the Cryptoswap pool,
 creating an LP token.
 A loan of 
\begin_inset Formula $d$
\end_inset

 stablecoins is then taken against this LP token as collateral.
 User brings in a single cryptocurrency (like BTC) in amount 
\begin_inset Formula $c_{in}$
\end_inset

.
 Deposit proceeds in the following sequence:
\end_layout

\begin_layout Itemize
User brings 
\begin_inset Formula $c_{in}$
\end_inset

 of cryptocurrency and specifies the debt 
\begin_inset Formula $\Delta d$
\end_inset

 (ideally equal to the deposited value,
 or set proportionally to Cryptoswap pool balances);
\end_layout

\begin_layout Itemize
System takes a loan of 
\begin_inset Formula $\Delta d$
\end_inset

 stablecoins and deposits 
\begin_inset Formula $(\Delta d,c_{in})$
\end_inset

 in Cryptoswap,
 yielding 
\begin_inset Formula $l$
\end_inset

 LP tokens;
\end_layout

\begin_layout Itemize
Calculate value in Yield Basis AMM using Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:value"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 and 
\begin_inset Formula $x_{0}$
\end_inset

 calculated using Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:x0"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 for the state before deposit 
\begin_inset Formula $\left(d,y\right)$
\end_inset

 and after the deposit 
\begin_inset Formula $\left(d+\Delta d,y+l\right)$
\end_inset

;
\end_layout

\begin_layout Itemize
Calculate amount of ybBTC tokens to mint for the depositor proportionally to the value increase from their deposit.
\end_layout

\begin_layout Subsection*
Withdrawals
\end_layout

\begin_layout Standard
When a user withdraws a fraction of liquidity,
 in order to not have any unfair disadvantage for liquidity providers,
 one cannot specify an arbitrary value of the debt.
 Instead,
 both collateral and debt are reduced by the same fraction equal to fraction of overall LP tokens being withdrawn.
 So,
 the withdrawal sequence in the smart contract goes as follows:
\end_layout

\begin_layout Itemize
The user brings 
\begin_inset Formula $t$
\end_inset

 LP tokens for withdraw.
 If total supply of LP tokens is 
\begin_inset Formula $s$
\end_inset

,
 liquidity is reduced by 
\begin_inset Formula $t/s$
\end_inset

;
\end_layout

\begin_layout Itemize
Collateral is reduced by 
\begin_inset Formula $\delta c=ct/s$
\end_inset

,
 and debt gets reduced by 
\begin_inset Formula $\delta d=dt/s$
\end_inset

;
\end_layout

\begin_layout Itemize
Since the collateral is cryptopool LP tokens,
 we withdraw 
\begin_inset Formula $\delta c$
\end_inset

 LP tokens so that the withdrawn stablecoin amount is exactly 
\begin_inset Formula $\delta d$
\end_inset

,
 and the cryptocurrency amount is kept varied as a function of 
\begin_inset Formula $\delta c$
\end_inset

 and 
\begin_inset Formula $\delta d$
\end_inset

,
 given by 
\family typewriter
withdraw_fixed_out
\family default
 method of the smart contract;
\end_layout

\begin_layout Itemize
Part of debt 
\begin_inset Formula $\delta d$
\end_inset

 gets repaid using the withdrawn stablecoins,
 and any cryptocurrency withdrawn from cryptoswap is sent to the user.
\end_layout

\begin_layout Section*
Splitting revenues between staked and unstaked liquidity
\end_layout

\begin_layout Standard
In Yield Basis,
 real yields are paid only to users who do not opt in to earn YB tokens (e.g.
 stake).
 Users who do not stake earn real yield from trading fees.
 Users who stake do not earn yield from fees,
 but instead they receive governance tokens from emissions.
 The system also charges an admin fee which is taken from the fees earned and given to YB token stakers (e.g.
 veYB).
\end_layout

\begin_layout Standard
The portion of fees given to veYB depends dynamically on the amount staked.
 Let's denote:
\end_layout

\begin_layout Itemize
\begin_inset Formula $s$
\end_inset

 - amount of LP tokens staked to earn YB tokens;
\end_layout

\begin_layout Itemize
\begin_inset Formula $T$
\end_inset

 - total amount of LP tokens;
\end_layout

\begin_layout Itemize
\begin_inset Formula $f_{\min}$
\end_inset

- minimal value of admin fee;
\end_layout

\begin_layout Itemize
\begin_inset Formula $r$
\end_inset

 - natural return rate (e.g.
 how much LPs would have been earning if no token system / staking / unstaking existed).
\end_layout

\begin_layout Standard
With these definitions,
 the admin fee is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
f_{a}=1-\left(1-f_{\min}\right)\sqrt{1-\frac{s}{T}}.
\end{equation}

\end_inset

This formula has the following properties:
\end_layout

\begin_layout Itemize
if nothing is staked (
\begin_inset Formula $s/T=0$
\end_inset

),
 system admin fee is equal to 
\begin_inset Formula $f_{\min}$
\end_inset

 (for example,
 
\begin_inset Formula $10\%$
\end_inset

),
 and the rest (
\begin_inset Formula $90\%$
\end_inset

) goes to LPs;
\end_layout

\begin_layout Itemize
if everything is staked (
\begin_inset Formula $s/T=100\%$
\end_inset

),
 system admin fee is equal to 
\begin_inset Formula $100\%$
\end_inset

 because LPs are all earning YB tokens and nothing else.
\end_layout

\begin_layout Standard
Let's consider returns for the unstaked 
\begin_inset Formula $r_{us}$
\end_inset

 part in different limits of how much is staked.
 If 
\begin_inset Formula $s\rightarrow0$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
f_{a} & \rightarrow & f_{\min,}\\
r_{us} & \rightarrow & \text{\left(1-f_{\min}\right)r.}
\end{eqnarray}

\end_inset

And if 
\begin_inset Formula $s\rightarrow T$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
f_{a} & \rightarrow & 100\%,\\
r_{us} & \rightarrow & \infty.
\end{eqnarray}

\end_inset

The infinite 
\begin_inset Formula $r_{us}$
\end_inset

while admin fee is going to 
\begin_inset Formula $100\%$
\end_inset

 is deliberate and the reason why the admin fee formula is constructed this way.
\end_layout

\begin_layout Standard
From Eq.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:value"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

,
 total value of liquidity expressed in crypto is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
v=\frac{x_{0}}{\left(2L-1\right)p_{o}}.
\end{equation}

\end_inset

We define:
\end_layout

\begin_layout Itemize
\begin_inset Formula $v_{-1}$
\end_inset

 - previous total value of liquidity;
\end_layout

\begin_layout Itemize
\begin_inset Formula $v_{+1}$
\end_inset

 - new total value of liquidity before admin fee is taken;
\end_layout

\begin_layout Itemize
\begin_inset Formula $v_{s}$
\end_inset

 - value assigned to staked liquidity (which earns no fees);
\end_layout

\begin_layout Itemize
\begin_inset Formula $v_{us}$
\end_inset

 - value assigned to unstaked liquidity (the one which earns fees);
\end_layout

\begin_layout Itemize
\begin_inset Formula $v_{s*}$
\end_inset

 - 
\begin_inset Quotes eld
\end_inset

ideal
\begin_inset Quotes erd
\end_inset

 value of staked liquidity (the it'd have if we have no losses);
\end_layout

\begin_layout Itemize
\begin_inset Formula $a$
\end_inset

 - running value of collected admin fees.
\end_layout

\begin_layout Standard
Let's look at the situation when the value 
\begin_inset Formula $v$
\end_inset

 is just changed due to trades (not deposits or withdrawals).
 Then running value of admin fees increases by:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\Delta a=\left(v_{1}-v_{-1}\right)f_{a},
\end{equation}

\end_inset

and value to be split between 
\begin_inset Formula $v_{s}$
\end_inset

 and 
\begin_inset Formula $v_{us}$
\end_inset

 is the rest:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\Delta v_{use}=\left(v_{1}-v_{-1}\right)\left(1-f_{a}\right).
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
After admin fee is taken,
 new total value of liquidity is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
v_{1}^{\prime}=v_{-1}+\Delta v_{use}.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
If we did not have any losses,
 staked liquidity value is equal to its upper limit:
 
\begin_inset Formula $v_{s}=v_{s*}$
\end_inset

.
 However,
 if we experience a loss,
 e.g.
 
\begin_inset Formula $\Delta v_{use}<0$
\end_inset

,
 we share this loss between staked and unstaked liquidity:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\Delta v_{s}=\Delta v_{use}\frac{s}{T},\qquad\Delta v_{use}\le0.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
If we had profit but previously have loss,
 then 
\begin_inset Formula $v_{s}<v_{s*}$
\end_inset

,
 and we need to add value to 
\begin_inset Formula $v_{s}$
\end_inset

 until it reaches 
\begin_inset Formula $v_{s*}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\Delta v_{s}=\min\left(\Delta v_{use}\frac{s}{T},\max\left(v_{s*}-v_{s},0\right)\right),\qquad\Delta v_{use}>0.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The amount of unstaked LP tokens does not change if no deposits/withdrawals are happening,
 so one LP token represents a value-accruing cryptocurrency.
 Without deposits or withdrawals then 
\begin_inset Formula $T-s=\text{const}$
\end_inset

.
 The value of 
\begin_inset Quotes eld
\end_inset

staked
\begin_inset Quotes erd
\end_inset

 tokens,
 however,
 experiences negative rebases.
 Let's call reduction of number of staked LP tokens as 
\begin_inset Formula $\delta s$
\end_inset

.
 Then total and staked tokens after such a rebase accordingly change:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
s^{\prime} & = & s-\delta s,\\
T^{\prime} & = & T-\delta s.
\end{eqnarray}

\end_inset

The ratio between these values should be the same as ratio between new staked and total values:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{s-\delta s}{T-\delta s}=\frac{v_{s}^{\prime}}{v_{1}^{\prime}}.
\end{equation}

\end_inset

From this:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\delta s=\frac{sv_{1}^{\prime}-Tv_{s}^{\prime}}{v_{1}^{\prime}-v_{s}^{\prime}}.
\end{equation}

\end_inset


\end_layout

\begin_layout Section*
Arbitraging leverage AMM and virtual pool
\end_layout

\begin_layout Standard
When we leverage liquidity,
 the AMM exchanges stablecoins for the LP token of cryptopool (or in the opposite direction).
 However,
 an arbitrage trader wants to exchange between real cryptocurrency and stablecoin,
 not LP tokens.
 Therefore,
 we introduce a 
\begin_inset Quotes eld
\end_inset

virtual pool
\begin_inset Quotes erd
\end_inset

 smart contract which combines leverage AMM,
 cryptopool and stablecoin (crvUSD) flash loans to facilitate this process.
\end_layout

\begin_layout Subsection*
Exchange from cryptoasset to stablecoin in virtual pool
\end_layout

\begin_layout Standard
The exchange consists of the following steps:
\end_layout

\begin_layout Itemize
Use a flash loan to borrow exact amount of crvUSD needed to add both cryptoasset and crvUSD as balanced liquidity in the cryptopool.
 This action does not change the spot price in cryptopool;
\end_layout

\begin_layout Itemize
Exchange the LP token for crvUSD in the leverage AMM;
\end_layout

\begin_layout Itemize
Repay the flash loan from the crvUSD obtained in leverage AMM;
\end_layout

\begin_layout Itemize
Return any remaining crvUSD to the user.
\end_layout

\begin_layout Subsection*
Exchange from stablecoin to cryptoasset in virtual pool
\end_layout

\begin_layout Standard
Exchange in this direction is much more elaborate:
\end_layout

\begin_layout Itemize
Flash-borrow an additional amount of crvUSD (the exact amount will be calculated below);
\end_layout

\begin_layout Itemize
Exchange all the crvUSD acquired (provided by user + flash loan) to cryptopool LP in the leverage AMM;
\end_layout

\begin_layout Itemize
Remove liquidity from the cryptopool symmetrically (e.g.
 without changing crypto-to-stablecoin ratio and price);
\end_layout

\begin_layout Itemize
The result should be the exact amount of stablecoins needed to repay the flash loan.
 Therefore,
 it is essential to calculate this amount precisely before executing.
\end_layout

\begin_layout Standard
If leverage AMM fee is 
\begin_inset Formula $f$
\end_inset

,
 debt is 
\begin_inset Formula $d$
\end_inset

,
 collateral amount in AMM is 
\begin_inset Formula $y$
\end_inset

,
 and 
\begin_inset Formula $x_{0}$
\end_inset

 is known,
 whole the cryptopool has 
\begin_inset Formula $x_{c}$
\end_inset

 stablecoins,
 
\begin_inset Formula $y_{c}$
\end_inset

 amount of crypto,
 and total LP supply of 
\begin_inset Formula $S_{c}$
\end_inset

,
 then the required flash amount 
\begin_inset Formula $\varphi$
\end_inset

 can be determined from the input amount of stablecoins 
\begin_inset Formula $x$
\end_inset

 by solving a quadratic equation:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\varphi^{2}+\varphi\left(x_{0}-d+x-\frac{x_{c}}{S_{c}}\left(1-f\right)y\right)-yx\frac{x_{c}}{S_{c}}\left(1-f\right)=0.
\end{equation}

\end_inset

If we denote 
\begin_inset Formula $r=\frac{x_{c}}{S_{c}}\left(1-f\right)$
\end_inset

,
 we obtain:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
D=b^{2}+4yxr,\qquad b=x_{0}-d+x-ry,
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\varphi=\frac{1}{2}\left(\sqrt{D}-b\right).
\end{equation}

\end_inset


\end_layout

\begin_layout Section*
Conclusion
\end_layout

\begin_layout Standard
This work demonstrates a method to eliminate impermanent loss and provide automatically managed concentrated liquidity in a special automatic market-maker which is a combination of Curve cryptoswap AMM and a special releverage AMM.
 Simulations over a 6 year period show an average APR of 20 percent.
 The described method is currently being implemented in Yield Basis.
\end_layout

\begin_layout Standard
Ongoing work focuses on optimizing borrow rate,
 making AMM parameters dynamic in response to asset volatility,
 and ensuring simulated results remain independent on price data quality.
\end_layout

\end_body
\end_document
